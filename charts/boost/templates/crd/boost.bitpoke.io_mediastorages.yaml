{{- if .Values.crd.enable }}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    {{- include "chart.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.crd.keep }}
    "helm.sh/resource-policy": keep
    {{- end }}
    controller-gen.kubebuilder.io/version: v0.18.0
  name: mediastorages.boost.bitpoke.io
spec:
  group: boost.bitpoke.io
  names:
    kind: MediaStorage
    listKind: MediaStorageList
    plural: mediastorages
    singular: mediastorage
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: MediaStorage is the Schema for the mediastorages API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: MediaStorageSpec defines the desired state of MediaStorage.
            properties:
              emptyDir:
                description: |-
                  Represents an empty directory for a pod.
                  Empty directory volumes support ownership management and SELinux relabeling.
                properties:
                  medium:
                    description: |-
                      medium represents what type of storage medium should back this directory.
                      The default is "" which means to use the node's default medium.
                      Must be an empty string (default) or Memory.
                      More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                    type: string
                  sizeLimit:
                    anyOf:
                    - type: integer
                    - type: string
                    description: |-
                      sizeLimit is the total amount of local storage required for this EmptyDir volume.
                      The size limit is also applicable for memory medium.
                      The maximum usage on memory medium EmptyDir would be the minimum value between
                      the SizeLimit specified here and the sum of memory limits of all containers in a pod.
                      The default is nil which means that the limit is undefined.
                      More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              gcs:
                properties:
                  bucket:
                    type: string
                  pathPrefix:
                    type: string
                required:
                - bucket
                type: object
              persistentVolumeClaim:
                description: |-
                  PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.
                  This volume finds the bound PV and mounts that volume for the pod. A
                  PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another
                  type of volume that is owned by someone else (the system).
                properties:
                  claimName:
                    description: |-
                      claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                      More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                    type: string
                  readOnly:
                    description: |-
                      readOnly Will force the ReadOnly setting in VolumeMounts.
                      Default false.
                    type: boolean
                required:
                - claimName
                type: object
              subdirectory:
                description: Subdirectory is the type of subdirectory structure to
                  use for media storage.
                enum:
                - projectAndSite
                - siteOnly
                - userProvided
                - rootOnly
                type: string
                x-kubernetes-validations:
                - message: Value is immutable
                  rule: self == oldSelf
            required:
            - subdirectory
            type: object
          status:
            description: MediaStorageStatus defines the observed state of MediaStorage.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
{{- end -}}
